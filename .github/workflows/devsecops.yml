name: DevSecOps CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  sast:
    name: Static Code Analysis (SAST) with SonarQube
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v1.1.0
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  build:
    name: Build and Deploy App
    needs: sast
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build app
        run: |
          echo "Run your build here (npm install, dotnet build, etc)"

      - name: Deploy to Docker (Localhost for testing)
        run: |
          docker build -t insecure-app .
          docker run -d -p 8080:80 --name test-app insecure-app

  dast:
    name: DAST Scan with OWASP ZAP
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Wait for App to be ready (e.g., on localhost:8080)
        run: |
          echo "Waiting for app to start..."
          sleep 20  # или использовать curl в цикле для проверки готовности

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.9.0
        with:
          target: 'http://localhost:8080'
          fail_action: false
          docker_name: 'owasp/zap2docker-stable'
