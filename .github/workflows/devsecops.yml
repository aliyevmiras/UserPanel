name: DevSecOps CI/CD Pipeline

on:
  push:
    branches: '**'
  pull_request:
    branches: [ master ]

jobs:
  sast:
    name: Static Code Analysis (SAST) with SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.0.2
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


  build:
    name: Build and Deploy App
    needs: sast
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build app
        run: |
          echo "üîß Run your build here (npm install, dotnet build, etc)"
          # Example for Node.js:
          # npm install
          # npm run build

      - name: Deploy to Docker (Localhost for testing)
        run: |
          echo "üê≥ Building Docker image and running container"
          docker build -t insecure-app .
          docker run -d -p 8080:80 --name test-app insecure-app

  dast:
    name: DAST Scan with OWASP ZAP
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Wait for App to be ready (e.g., on localhost:8080)
        run: |
          echo "‚è≥ Waiting for the app to be ready..."
          sleep 20

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.9.0
        with:
          target: 'http://localhost:8080'
          fail_action: false
          docker_name: 'owaspfoundation/zap-baseline'
